# source
bind r source-file ~/dots/tmux/.tmux.conf \; display-message "Config reloaded!"
# prefix
set -g prefix C-a
unbind C-b
bind C-a send-prefix
# New pane
bind 'C-a' run 'tmux split-window -c "#{pane_current_path}" -e "TMUX_PARENT_PANE_ID=#{pane_id}" -h'
bind 'C-s' run 'tmux split-window -c "#{pane_current_path}" -e "TMUX_PARENT_PANE_ID=#{pane_id}" -v'
# New window (don't rename windows automatically)
bind 'C-c' run 'tmux new-window -c "#{pane_current_path}" -e "TMUX_PARENT_PANE_ID=#{pane_id}"'

# kill pane/window/session
bind -n C-q kill-pane # Kill a pane with Ctrl-q
bind C-q kill-window # Kill a window with Opt + q
bind C-` kill-session # Kill a session with Prefix + x

# switch panes
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
# switch window
bind -n C-p previous-window
bind -n C-n next-window
# switch session
bind -n M-p switch-client -p 
bind -n M-n switch-client -n  # Switch to next session

# pane splits
# bind Tab select-pane -t :.+  # Move to next pane
# bind-keyt-window -h
# bind-key -n M-s split-window -v

bind -n C-y copy-mode
bind S setw synchronize-panes

# vim-like
# set -s escape-time 0
set -g escape-time 0
set-window-option -g mode-keys vi
set -g mode-keys vi
setw -g mode-keys vi
# bind -T copy-mode-vi v send-keys -X begin-selection
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind -r ^ last-window
# bind-key -T copy-mode-vi 'C-\' select-pane -l
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# Use telescope-tmux to open file paths found in all buffers
# bind f display-popup -E -w 80% -h 80% nvim -c ":Telescope tmux pane_file_paths quit_on_select=true" tmp.txt
# Use fzf and ton to open file paths found in all buffers
bind f display-popup -E -w 40% -h 40% -T 'Tmux File Paths' \
  "~/.config/nvim/scripts/tmux_file_paths.sh \
  | fzf --prompt='Open: ' \
		--pointer= \
		--layout=reverse \
		--info=inline-right \
		--keep-right \
		--color=gutter:-1 \
    --delimiter=: \
  | ~/.tmux/plugins/tmux-open-nvim/scripts/ton"


# settings
setenv -g LANG "en_US.UTF-8"
setenv -g LC_ALL "en_US.UTF-8"
setenv -g EDITOR "nvim"
set-option -g set-clipboard on
set-option -g allow-rename off
set-option -g status-keys vi
set -g history-limit 50000
# set -g display-time 4000
set -g display-time 10000
set -g status-interval 5
set -g base-index 1
set -g renumber-windows on
set -g mouse on
set -g status-bg cyan
set -g window-status-current-style bg=red,fg=white
set -gq allow-passthrough on
set -g visual-activity off
# (OS X) Fix pbcopy/pbpaste for old tmux versions (pre 2.6)
set -g default-command "reattach-to-user-namespace -l $SHELL"
# Upgrade $TERM
set -g default-command $SHELL
set-option -g default-terminal 'tmux-256color'
set-option -sa terminal-overrides ',kitty:RGB'
# set -g default-terminal "screen-256color"
# Focus events enabled for terminals that support them
set -g focus-events on
# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on


# Aesthetics
# General tmux status bar aesthetics
# set-option -g status-style bg=#1f1f28,fg=#c8c093  # Dark background, subtle foreground
# set-option -g message-style bg=#223249,fg=#c8c093  # Command messages style
# # Window status styles
# set-window-option -g window-status-style bg=#1f1f28,fg=#727169  # Inactive windows
# set-window-option -g window-status-current-style bg=#2d4f67,fg=#c8c093 # Active window
# # Pane border styles
# set-option -g pane-border-style bg=#1f1f28,fg=#727169  # Inactive pane borders
# set-option -g pane-active-border-style bg=#2d4f67,fg=#c8c093  # Active pane border
# # Highlight active pane with darker background
# set-option -g pane-active-border-style bg=#1f1f28
# set-option -g pane-active-style bg=#282834

###
### THEME
###

polar_night0=#2e3440
polar_night1=#3b4253
polar_night2=#434c5e
polar_night3=#4c566a
polar_night4=#616E88
snow_storm_4=#d8dee9
snow_storm_5=#e5e9f0
snow_storm_6=#eceff4
frost_7=#8fbcbb
frost_8=#88c0d0
frost_9=#81a1c1
frost_10=#5e81ac
aurora_11=#bf616a
aurora_12=#d08770
aurora_13=#ebcb8b
aurora_14=#a3be8c
aurora_15=#b48ead

# Status line
set -g @batt_icon_charge_tier8 '󰂁'
set -g @batt_icon_charge_tier7 '󰂀'
set -g @batt_icon_charge_tier6 '󰁿'
set -g @batt_icon_charge_tier5 '󰁾'
set -g @batt_icon_charge_tier4 '󰁽'
set -g @batt_icon_charge_tier3 '󰁼'
set -g @batt_icon_charge_tier2 '󰁻'
set -g @batt_icon_charge_tier1 '󰁺'
set -g @batt_icon_status_charged '󰁹'
set -g @batt_icon_status_charging '󰂄'
set -g @batt_icon_status_discharging ''
set -g status-left-length 60
set -g status-right-length 60
set -g status-style "bg=$polar_night0"
set -g message-style "bg=$polar_night1,fg=$aurora_12"
set -g pane-border-style "bg=$polar_night0,fg=$polar_night2"
set -g pane-active-border-style "bg=$polar_night0,fg=$aurora_12"
set -g pane-border-lines "single"
set -g status-left "#[fg=$frost_9,bg=$polar_night0,bold] #S #[bg=$polar_night0] "
set -g status-right "#{prefix_highlight}\
#[fg=$polar_night4,bg=$polar_night0] #{df_avail} #[fg=$polar_night2]│\
#[fg=$polar_night4,bg=$polar_night0] %a %b %d #[fg=$polar_night2]│\
#[fg=$polar_night4,bg=$polar_night0] %I:%M%p "
set -g window-status-format "#I.#W #F"
set -g window-status-style "fg=$polar_night4,bg=$polar_night0"
set -g window-status-current-format " #W "
set -g window-status-current-style "fg=$aurora_14,bg=$polar_night1,bold"
set -g window-status-bell-style "fg=$aurora_12,bg=$polar_night0,bold"
set -g window-status-separator " "
set -g mode-style "bg=$frost_9,fg=$polar_night1"
set -g @prefix_highlight_fg brightblack
set -g @prefix_highlight_bg "$aurora_12"
# set -g menu-style "fg=$snow_storm_4,bg=$polar_night0"
# set -g menu-selected-style "fg=$polar_night0,bg=$aurora_12"
# set -g menu-border-style "fg=$aurora_12,bg=$polar_night0"
# set -g menu-border-lines "rounded"
set -g popup-border-style "fg=$aurora_12,bg=$polar_night0"
set -g popup-border-lines "rounded"
# Monitor other window activity
setw -g monitor-activity on
setw -g window-status-activity-style none

###
### Plugins
###
set -g @plugin 'tmux-plugins/tpm'

# must be before tmux-resurrect
# set -g @plugin 'ofirgall/tmux-window-name'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-capture-pane-contents 'on'
# set -g @resurrect-strategy-vim 'session'
# set -g @resurrect-strategy-nvim 'session'

set -g @plugin 'omerxx/tmux-sessionx'
set -g @sessionx-bind 'a'
# set -g @sessionx-fzf-builtin-tmux 'on'
# set -g @sessionx-x-path '~/dots'

set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'

set -g @plugin 'oluevaera/tmux-conda-inherit'

# set -g @plugin 'tmux-plugins/tmux-open'

set -g @plugin 'graemedavidson/tmux-pane-focus'
set -g status-right '#[fg=colour255,bg=colour237][#{@pane-focus-direction}][#{@pane-focus-size}]#[fg=default,bg=default]'

# set -g @plugin 'schasse/tmux-jump'
# unbind 's'
# set -g @jump-key 's'

set -g @plugin 'nhdaly/tmux-better-mouse-mode'

# set -g @plugin 'tmux-plugins/tmux-yank'


# tmux-open-nvim
# set -g @plugin 'trevarj/tmux-open-nvim'
# set -g @ton-open-strategy ":e"
# set -g @ton-menu-style ""
# set -g @ton-menu-selected-style "fg=brightblack,bg=blue"
# set -g @ton-prioritize-window false

# Automatically install tpm
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
